<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security 
		http://www.springframework.org/schema/security/spring-security.xsd">

	<http auto-config="true" use-expressions="true">
		<!-- login 이후 금지된 요청을 할 경우 -->
		<access-denied-handler error-page="/home"/>
		
		<!-- iframe 제한 해제 -->
		<headers>
			<frame-options disabled="true"/>
		</headers>
		
		<!-- intercept-url 태그를 사용해 각 요청별 권한을 지정한다. -->
		<intercept-url pattern="/home" access="permitAll" />
		<intercept-url pattern="/my_page" access="hasRole('ROLE_USER')" />
		<intercept-url pattern="/login_page" access ="isAnonymous()" />
		<intercept-url pattern="/join_page" access ="isAnonymous()" />
		<intercept-url pattern="/**" access="permitAll" requires-channel="https"/>
		
		<!-- form Login 설정 -->
		<!-- 미로그인인 자가 로그인 이후 접속 가능한 페이지 접속 시도 시 login_page로 요청 -->
		<form-login
			login-processing-url = "/login"
			login-page = "/login_page"
			username-parameter = "mName"
			password-parameter = "mPw"
			default-target-url = "/myPage"
			authentication-failure-url = "/processLogin?error=1"
			always-use-default-target = "true"
		/>
		<!-- form-login 
			login-processing-url : 로그인 페이지의 form action = "" 에 입력할 주소 지정
			login-page : 로그인 페이지의 주소 지정
			username-parameter : 로그인 페이지의 form에 있는 username을 저장한 변수 지정
			password-parameter : 로그인 페이지의 form에 있는 password를 저장한 변수 지정
			default-target-url : 로그인 성공 시 호출할 주소 지정
			authentication-failure-url : 로그인 실패 시 호출할 주소 지정
		 -->
		
		<!-- csrf 설정 -->	
		<csrf disabled="false"/>
	</http>
	
	<!-- DB이용 인증처리 (authentication) -->
	<authentication-manager>
		<authentication-provider user-service-ref="customUserDetailsService">
			<password-encoder ref="passwordEncoder"/>
		</authentication-provider>
	</authentication-manager>
	
	<!-- user-service-ref="customUserDetailsService"객체를 나타내는 bean -->
	<!-- 인증처리 클래스. UserDetailsService인터페이스를 구현한 클래스로 개발자가 만듦 -->
	<beans:bean id="customUserDetailsService" class="com.kim.mbtitest.security.CustomUserDetailsService"/>
	
	<!-- 암호화 된 패스워드 처리 bean -->
	<beans:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	
</beans:beans>
